{
  "openapi": "3.1.0",
  "info": {
      "title": "FastAPI",
      "version": "0.1.0"
  },
  "paths": {
      "/metrics": {
          "get": {
              "summary": "监控指标",
              "description": "返回监控指标，包括：\n1. HTTP 请求监控指标（http_server_requests_seconds）\n2. 带自定义标签的 Prometheus 默认指标",
              "operationId": "metrics_metrics_get",
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {}
                          }
                      }
                  }
              }
          }
      },
      "/": {
          "get": {
              "summary": "Root",
              "operationId": "root__get",
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {}
                          }
                      }
                  }
              }
          }
      },
      "/version": {
          "get": {
              "summary": "Get Version",
              "operationId": "get_version_version_get",
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {}
                          }
                      }
                  }
              }
          }
      },
      "/health": {
          "get": {
              "summary": "Health Check",
              "description": "健康检查接口，返回服务状态。",
              "operationId": "health_check_health_get",
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "type": "object",
                                  "title": "Response Health Check Health Get"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/files/{file_name}": {
          "get": {
              "summary": "Files",
              "operationId": "files_files__file_name__get",
              "parameters": [
                  {
                      "name": "file_name",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "title": "File Name"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {}
                          }
                      }
                  },
                  "422": {
                      "description": "Validation Error",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/HTTPValidationError"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/parse": {
          "post": {
              "summary": "Parse",
              "description": ":param file:\n:param response:\n:param request:\n:param ocr: 为OCRType.YES时强制使用ocr（图像处理），为OCRType.AUTO时自动判断，\n            非扫描件用pdf2txt，扫描件或者pdf2txt解析为空用ocr，为OCRType.NO时强制使用pdf2txt\n:param table_enhanced: 为True时使用GPT优化，为False时不使用GPT\n:param cache: 是否使用缓存\n:param format: 输出格式，可选 json, markdown, html\n:return:",
              "operationId": "parse_parse_post",
              "parameters": [
                  {
                      "name": "cache",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "boolean",
                          "default": true,
                          "title": "Cache"
                      }
                  },
                  {
                      "name": "format",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "anyOf": [
                              {
                                  "$ref": "#/components/schemas/FormatType"
                              },
                              {
                                  "type": "null"
                              }
                          ],
                          "default": "json",
                          "title": "Format"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "$ref": "#/components/schemas/Body_parse_parse_post"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ParseResponse"
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "Validation Error",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/HTTPValidationError"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/queue": {
          "get": {
              "summary": "Get Queue",
              "operationId": "get_queue_queue_get",
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {}
                          }
                      }
                  }
              }
          }
      },
      "/parse_url": {
          "post": {
              "summary": "Parse Url",
              "description": "解析URL指向的文件\n\n:param request: URL请求对象\n:param response: FastAPI响应对象\n:param request_obj: FastAPI请求对象\n:param ocr: OCR类型选择\n:param table_enhanced: 是否启用表格增强\n:param cache: 是否使用缓存\n:param format: 输出格式，可选 json, markdown, html\n:return: 解析响应",
              "operationId": "parse_url_parse_url_post",
              "parameters": [
                  {
                      "name": "cache",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "boolean",
                          "default": true,
                          "title": "Cache"
                      }
                  },
                  {
                      "name": "format",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "allOf": [
                              {
                                  "$ref": "#/components/schemas/FormatType"
                              }
                          ],
                          "default": "json",
                          "title": "Format"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/Body_parse_url_parse_url_post"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ParseResponse"
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "Validation Error",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/HTTPValidationError"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/parse_web": {
          "post": {
              "summary": "Parse Html",
              "operationId": "parse_html_parse_web_post",
              "requestBody": {
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/URLRequest"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/HtmlParseResponse"
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "Validation Error",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/HTTPValidationError"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/convert": {
          "post": {
              "summary": "Convert",
              "operationId": "convert_convert_post",
              "requestBody": {
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "$ref": "#/components/schemas/Body_convert_convert_post"
                          }
                      }
                  },
                  "required": true
              },
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {}
                          }
                      }
                  },
                  "422": {
                      "description": "Validation Error",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/HTTPValidationError"
                              }
                          }
                      }
                  }
              }
          }
      },
      "/split": {
          "post": {
              "summary": "Split File",
              "description": ":param file:\n:param response:\n:param chunk_size:\n:param chunk_overlap:\n:param ocr: 为OCRType.YES时强制使用ocr（图像处理），为OCRType.AUTO时自动判断，非扫描件用pdf2txt，扫描件或者pdf2txt解析为空用ocr，为OCRType.NO时强制使用pdf2txt\n:param table_enhanced: 为True时使用GPT优化，为False时不使用GPT\n:return:",
              "operationId": "split_file_split_post",
              "parameters": [
                  {
                      "name": "chunk_size",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "default": 500,
                          "title": "Chunk Size"
                      }
                  },
                  {
                      "name": "chunk_overlap",
                      "in": "query",
                      "required": false,
                      "schema": {
                          "type": "integer",
                          "default": 0,
                          "title": "Chunk Overlap"
                      }
                  }
              ],
              "requestBody": {
                  "required": true,
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "$ref": "#/components/schemas/Body_split_file_split_post"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Successful Response",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/ParseResponse"
                              }
                          }
                      }
                  },
                  "422": {
                      "description": "Validation Error",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/HTTPValidationError"
                              }
                          }
                      }
                  }
              }
          }
      }
  },
  "components": {
      "schemas": {
          "Body_convert_convert_post": {
              "properties": {
                  "file": {
                      "type": "string",
                      "format": "binary",
                      "title": "File"
                  },
                  "format_to": {
                      "type": "string",
                      "title": "Format To"
                  },
                  "timeout": {
                      "anyOf": [
                          {
                              "type": "integer"
                          },
                          {
                              "type": "null"
                          }
                      ],
                      "title": "Timeout",
                      "default": 180
                  }
              },
              "type": "object",
              "required": [
                  "file",
                  "format_to"
              ],
              "title": "Body_convert_convert_post"
          },
          "Body_parse_parse_post": {
              "properties": {
                  "file": {
                      "type": "string",
                      "format": "binary",
                      "title": "File"
                  },
                  "force_cv": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/OCRType"
                          }
                      ],
                      "default": "yes"
                  },
                  "resolution": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Resolution"
                          }
                      ],
                      "default": "high"
                  },
                  "de_seal_enable": {
                      "type": "boolean",
                      "title": "De Seal Enable",
                      "default": true
                  },
                  "fix_text_enable": {
                      "type": "boolean",
                      "title": "Fix Text Enable",
                      "default": true
                  },
                  "char_box_enable": {
                      "type": "boolean",
                      "title": "Char Box Enable",
                      "default": false
                  },
                  "tilt_correction_enable": {
                      "type": "boolean",
                      "title": "Tilt Correction Enable",
                      "default": true
                  },
                  "border_table_alg": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/BorderTableAlg"
                          }
                      ],
                      "default": "sdbordertable_cv_model"
                  },
                  "borderless_table_alg": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/BorderlessTableAlg"
                          }
                      ],
                      "default": "sdborderlesstable_cv_lite_model"
                  },
                  "layout_alg": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/LayoutAlg"
                          }
                      ],
                      "default": "sdlayout"
                  },
                  "formula_enable": {
                      "type": "boolean",
                      "title": "Formula Enable",
                      "default": true
                  },
                  "figure_rec_by_vl_enable": {
                      "type": "boolean",
                      "title": "Figure Rec By Vl Enable",
                      "default": false
                  },
                  "figure_upload_enable": {
                      "type": "boolean",
                      "title": "Figure Upload Enable",
                      "default": false
                  },
                  "chapter_alg": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/ChapterAlg"
                          }
                      ],
                      "default": "re"
                  },
                  "reading_order_enable": {
                      "type": "boolean",
                      "title": "Reading Order Enable",
                      "default": true
                  }
              },
              "type": "object",
              "required": [
                  "file"
              ],
              "title": "Body_parse_parse_post"
          },
          "Body_parse_url_parse_url_post": {
              "properties": {
                  "url": {
                      "type": "string",
                      "title": "Url"
                  },
                  "ocr_params": {
                      "anyOf": [
                          {
                              "$ref": "#/components/schemas/OCRParams"
                          },
                          {
                              "type": "null"
                          }
                      ],
                      "default": {
                          "force_cv": "yes",
                          "resolution": "high",
                          "de_seal_enable": true,
                          "fix_text_enable": true,
                          "char_box_enable": false,
                          "tilt_correction_enable": true,
                          "border_table_alg": "sdbordertable_cv_model",
                          "borderless_table_alg": "sdborderlesstable_cv_lite_model",
                          "layout_alg": "sdlayout",
                          "formula_enable": true,
                          "figure_rec_by_vl_enable": false,
                          "figure_upload_enable": false,
                          "chapter_alg": "re",
                          "reading_order_enable": true
                      }
                  }
              },
              "type": "object",
              "required": [
                  "url"
              ],
              "title": "Body_parse_url_parse_url_post"
          },
          "Body_split_file_split_post": {
              "properties": {
                  "file": {
                      "type": "string",
                      "format": "binary",
                      "title": "File"
                  }
              },
              "type": "object",
              "required": [
                  "file"
              ],
              "title": "Body_split_file_split_post"
          },
          "BorderTableAlg": {
              "type": "string",
              "enum": [
                  "sdbordertable_cv_model"
              ],
              "const": "sdbordertable_cv_model",
              "title": "BorderTableAlg"
          },
          "BorderlessTableAlg": {
              "type": "string",
              "enum": [
                  "sdborderlesstable_cv_lite_model",
                  "sdborderlesstable_cv_model",
                  "sdborderlesstable_lm_lite_model",
                  "sdborderlesstable_lm_model"
              ],
              "title": "BorderlessTableAlg"
          },
          "ChapterAlg": {
              "type": "string",
              "enum": [
                  "re",
                  "layout",
                  "llm"
              ],
              "title": "ChapterAlg"
          },
          "FormatType": {
              "type": "string",
              "enum": [
                  "json",
                  "html",
                  "md"
              ],
              "title": "FormatType"
          },
          "HTTPValidationError": {
              "properties": {
                  "detail": {
                      "items": {
                          "$ref": "#/components/schemas/ValidationError"
                      },
                      "type": "array",
                      "title": "Detail"
                  }
              },
              "type": "object",
              "title": "HTTPValidationError"
          },
          "HtmlParseResponse": {
              "properties": {
                  "code": {
                      "type": "integer",
                      "title": "Code",
                      "default": 200
                  },
                  "type": {
                      "anyOf": [
                          {
                              "type": "string"
                          },
                          {
                              "type": "null"
                          }
                      ],
                      "title": "Type",
                      "default": "txt"
                  },
                  "message": {
                      "type": "string",
                      "title": "Message"
                  },
                  "content": {
                      "anyOf": [
                          {
                              "type": "string"
                          },
                          {
                              "type": "null"
                          }
                      ],
                      "title": "Content",
                      "default": ""
                  }
              },
              "type": "object",
              "required": [
                  "message"
              ],
              "title": "HtmlParseResponse"
          },
          "LayoutAlg": {
              "type": "string",
              "enum": [
                  "sdlayout",
                  "layoutlmv3"
              ],
              "title": "LayoutAlg"
          },
          "OCRParams": {
              "properties": {
                  "force_cv": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/OCRType"
                          }
                      ],
                      "description": "auto：自动判断是扫描件还是非扫描件；yes：强制按扫描件处理；no：强制按非扫描件处理",
                      "default": "yes"
                  },
                  "resolution": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/Resolution"
                          }
                      ],
                      "description": "high：高分辨率，dpi=150；std：普通分辨率，dpi=100",
                      "default": "high"
                  },
                  "de_seal_enable": {
                      "type": "boolean",
                      "title": "De Seal Enable",
                      "description": "是否将页面内的印章消除掉",
                      "default": true
                  },
                  "fix_text_enable": {
                      "type": "boolean",
                      "title": "Fix Text Enable",
                      "description": "是否用非扫描件工具修复ocr结果，目前包含了pdfplumber和fitz修复",
                      "default": true
                  },
                  "char_box_enable": {
                      "type": "boolean",
                      "title": "Char Box Enable",
                      "description": "每个字的box是否要提供",
                      "default": false
                  },
                  "tilt_correction_enable": {
                      "type": "boolean",
                      "title": "Tilt Correction Enable",
                      "description": "页面有旋转的时候是否进行矫正",
                      "default": true
                  },
                  "border_table_alg": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/BorderTableAlg"
                          }
                      ],
                      "description": "有框表格使用的算法",
                      "default": "sdbordertable_cv_model"
                  },
                  "borderless_table_alg": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/BorderlessTableAlg"
                          }
                      ],
                      "description": "无框表格使用的算法",
                      "default": "sdborderlesstable_cv_lite_model"
                  },
                  "layout_alg": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/LayoutAlg"
                          }
                      ],
                      "description": "layout使用的算法",
                      "default": "sdlayout"
                  },
                  "formula_enable": {
                      "type": "boolean",
                      "title": "Formula Enable",
                      "description": "是否对公式进行识别",
                      "default": true
                  },
                  "figure_rec_by_vl_enable": {
                      "type": "boolean",
                      "title": "Figure Rec By Vl Enable",
                      "description": "是否对页面中的图片进行大模型的描述",
                      "default": false
                  },
                  "figure_upload_enable": {
                      "type": "boolean",
                      "title": "Figure Upload Enable",
                      "description": "是否将页面内检测到的图片上传到oss",
                      "default": false
                  },
                  "chapter_alg": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/ChapterAlg"
                          }
                      ],
                      "description": "章节识别算法",
                      "default": "re"
                  },
                  "reading_order_enable": {
                      "type": "boolean",
                      "title": "Reading Order Enable",
                      "description": "是否进行阅读顺序排序",
                      "default": true
                  }
              },
              "type": "object",
              "title": "OCRParams",
              "description": "OCR参数\ndefaults: 中精度预设"
          },
          "OCRType": {
              "type": "string",
              "enum": [
                  "auto",
                  "yes",
                  "no"
              ],
              "title": "OCRType"
          },
          "ParseResponse": {
              "properties": {
                  "content": {
                      "anyOf": [
                          {
                              "type": "string"
                          },
                          {
                              "type": "null"
                          }
                      ],
                      "title": "Content",
                      "default": ""
                  },
                  "type": {
                      "anyOf": [
                          {
                              "type": "string",
                              "enum": [
                                  "html",
                                  "markdown",
                                  "hypertxt"
                              ]
                          },
                          {
                              "type": "null"
                          }
                      ],
                      "title": "Type",
                      "default": "hypertxt"
                  },
                  "code": {
                      "type": "integer",
                      "title": "Code",
                      "default": 200
                  },
                  "message": {
                      "type": "string",
                      "title": "Message"
                  },
                  "trace_id": {
                      "anyOf": [
                          {
                              "type": "string"
                          },
                          {
                              "type": "null"
                          }
                      ],
                      "title": "Trace Id"
                  },
                  "request_id": {
                      "anyOf": [
                          {
                              "type": "string"
                          },
                          {
                              "type": "null"
                          }
                      ],
                      "title": "Request Id"
                  },
                  "format": {
                      "allOf": [
                          {
                              "$ref": "#/components/schemas/FormatType"
                          }
                      ],
                      "default": "json"
                  }
              },
              "type": "object",
              "required": [
                  "message"
              ],
              "title": "ParseResponse"
          },
          "Resolution": {
              "type": "string",
              "enum": [
                  "high",
                  "std"
              ],
              "title": "Resolution"
          },
          "URLRequest": {
              "properties": {
                  "url": {
                      "type": "string",
                      "title": "Url"
                  }
              },
              "type": "object",
              "required": [
                  "url"
              ],
              "title": "URLRequest"
          },
          "ValidationError": {
              "properties": {
                  "loc": {
                      "items": {
                          "anyOf": [
                              {
                                  "type": "string"
                              },
                              {
                                  "type": "integer"
                              }
                          ]
                      },
                      "type": "array",
                      "title": "Location"
                  },
                  "msg": {
                      "type": "string",
                      "title": "Message"
                  },
                  "type": {
                      "type": "string",
                      "title": "Error Type"
                  }
              },
              "type": "object",
              "required": [
                  "loc",
                  "msg",
                  "type"
              ],
              "title": "ValidationError"
          }
      }
  }
}
